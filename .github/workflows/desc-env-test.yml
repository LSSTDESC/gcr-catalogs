name: DESC Env Docker Build Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  docker-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image_version: [bleed, latest]
    steps:
      - name: docker login
        run: echo '${{ secrets.DOCKERHUB_ACCESSTOK }}' | docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
      - name: Set up environment variables for bleed/latest
        if: matrix.image_version == 'bleed' || matrix.image_version == 'latest'
        run: |
          echo "CONTAINER=updateGCR-${{ matrix.image_version }}" >> $GITHUB_ENV
          echo "IMAGE=lsstdesc/desc-python:${{ matrix.image_version }}" >> $GITHUB_ENV
      - run: docker pull $IMAGE
      - name: Start a docker container
        run: docker run --name=$CONTAINER $IMAGE bash
      - name: Set up pre-installation steps for bleed/latest
        if: matrix.image_version == 'bleed' || matrix.image_version == 'latest'
        run:
          docker exec $CONTAINER source /usr/local/py3.7/etc/profile.d/conda.sh
          docker exec $CONTAINER conda activate desc
      - name: Install master branch of ${{ github.repository }}
        run: docker exec $CONTAINER pip install https://github.com/${{ github.repository }}/archive/master.zip
      - run: docker commit -m="Installed ${{ github.repository }} master" $CONTAINER $IMAGE
      - name: Test new $CONTAINER
        run: |
          docker exec $CONTAINER python -c 'import GCRCatalogs; print(GCRCatalogs.__version__)'
          docker exec $CONTAINER python -c 'import pyccl; print(pyccl.__version__)'
      - run: docker push $IMAGE
